{
  "name": "internetCoffe-Mahdi",
  "nodes": [
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Merge Switcher data').item.json.result }}",
                    "rightValue": "=menu",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "7841889f-10c0-4102-bcc7-71281ffa5ef3"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Menu"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5e0653a0-0a62-4190-9383-0882fe4494b5",
                    "leftValue": "={{ $('Merge Switcher data').item.json.result }}",
                    "rightValue": "requesttodb",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Request to db"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "643809d1-962e-4845-9487-984e2305c366",
                    "leftValue": "={{ $('Merge Switcher data').item.json.result }}",
                    "rightValue": "refral",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "refral"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        520,
        -300
      ],
      "id": "494f5f3e-bd69-4558-afd3-eaef866c0a3d",
      "name": "Switch"
    },
    {
      "parameters": {
        "jsCode": "// گرفتن اطلاعات از نود BOT TOKEN\nconst botData = $('BOT INFO').item.json; // خواندن داده‌های نود BOT TOKEN\nconst botName = botData[\"bot-name\"] || \"نام بات تعریف نشده\"; // دریافت نام بات\nconst botUsername = botData[\"bot-username\"] || \"یوزرنیم بات تعریف نشده\"; // دریافت یوزرنیم بات\nconst botsupport = botData[\"support-username\"] || \"پشتیبانی ندارد\"; // دریافت یوزرنیم پشتیبانی\n\n// تابع برای جدا کردن اعداد سه رقم سه رقم\nfunction formatNumberWithCommas(number) {\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nconst botreferalcreadit = formatNumberWithCommas(botData[\"referal-creadit\"] || \"0\"); // دریافت مقدار اعتبار معرفی\nconst userId = $item(\"0\").$node[\"Coffe-Mahdi\"].json[\"callback_query\"]?.message?.chat?.id || \n                  $item(\"0\").$node[\"Coffe-Mahdi\"].json[\"message\"]?.from?.id;\n\nconst inviteMessage = encodeURIComponent(`\\nشما به ربات ${botName} دعوت شدید! 🤝\\n\\nاین ربات به شما کمک میکنه بدون مراجعه به کافی‌نت کارهاتون رو غیرحضوری انجام بدید. با این لینک دعوت ${botreferalcreadit} تومان اعتبار هدیه دریافت کنید!`);\n\n// دریافت مقدار original از نود قبلی\nconst inputData = $('Merge Switcher data').item.json.original;\n\n// تعریف پیام‌ها و دکمه‌های مربوط به هر مقدار original\nconst responses = {\n    \"help^\": {\n        message: `📌 راهنمای استفاده از ${botName}\\n\\n[... به زودی ...]`,\n        buttons: [\n            [{ text: \"» بازگشت\", callback_data: \"userpanel^\" }]\n        ]\n    },\n    \"serviceslist^\": {\n        message: `📌 لطفاً یکی از خدمات ${botName} را انتخاب کنید :`,\n        buttons: [\n            [{ text: \"درخواست پرینت یا کپی\", url: `https://pelicanstudio.ir/coffenetmehdi?user_id=${userId}` }],\n            [{ text: \"» بازگشت\", callback_data: \"userpanel^\" }]\n        ]\n    },\n    \"userpanel^\": {\n        message: `کاربر گرامی\\nلطفا یکی از گزینه‌های زیر رو برای ${botName} انتخاب کنید :`,\n        buttons: [\n            [{ text: `لیست خدمات ${botName}`, callback_data: \"serviceslist^\" }],\n            [\n                { text: \"💎 اعتبار شما\", callback_data: \"userprofile^\" },\n                { text: \"🛍 باشگاه مشتریان \", callback_data: \"club^\" }\n            ],\n            [{ text: \"❣️ دعوت از دوستان\", callback_data: \"Invitefriends^\" }],\n            [\n                { text: \"» راهنما\", callback_data: \"help^\" },\n                { text: \"» پشتیبانی\", url: `${botsupport}` }\n            ]\n        ]\n    },\n    \"club^\" : {\n        message: \"📌 باشگاه مشتریان\\n\\nبه باشگاه مشتریان خوش آمدید! اینجا می‌توانید از تخفیف‌ها و پیشنهادات ویژه ما بهره‌مند شوید.\",\n        buttons: [\n            [{text: \"🔥 کدهای تخفیف\", callback_data: \"disscount_offers^\"},\n                { text: \"🏄 پیشنهادات ویژه شما\", callback_data: \"special_offers^\" }\n            \n            ],\n            [{ text: \"» بازگشت\", callback_data: \"userpanel^\" }]\n        ]\n        },\n    \"joinedch^\": {\n        message: `📌 شما با موفقیت به کانال ${botName} پیوستید.`,\n        buttons: [\n            [{ text: \"» دریافت منو\", callback_data: \"userpanel^\" }]\n        ]\n    },\n    \"Invitefriends^\": {\n        message: `به ازاء دعوت هر نفر به ${botName} توسط شما، ${botreferalcreadit} تومان اعتبار هدیه برای شما ثبت می‌شود.\\n\\nروی دکمه «ارسال پیام دعوت» کلیک کنید و پیام دعوت رو با دوستانتان به اشتراک بگذارید.`,\n        buttons: [\n            [{ text: \"📩 ارسال پیام دعوت 📩\", url: `http://t.me/share/url?url=https://t.me/${botUsername}?start=ref${userId}&text=${inviteMessage}` }],\n            [{ text: \"» بازگشت\", callback_data: \"userpanel^\" }]\n        ]\n    },\n};\n\n// بررسی اینکه مقدار original در لیست پاسخ‌های ما وجود دارد یا نه\nif (responses[inputData]) {\n\t// Replace original return with the new API call format\n\treturn {\n\t\turl: \"https://api.telegram.org/bot\" + $('BOT INFO').item.json.TOKEN + \"/editMessageText\",\n\t\tmethod: \"POST\",\n\t\tparameters: {\n\t\t\tmessage_id: $item(\"0\").$node[\"Coffe-Mahdi\"].json[\"callback_query\"]?.message?.message_id || $item(\"0\").$node[\"Coffe-Mahdi\"].json[\"message\"]?.message_id, // updated message id retrieval\n\t\t\tchat_id: userId, // updated to use the new chat id\n\t\t\ttext: responses[inputData].message,\n\t\t\treply_markup: {\n\t\t\t\tinline_keyboard: responses[inputData].buttons\n\t\t\t},\n\t\t\tparse_mode: \"HTML\"\n\t\t}\n\t};\n}\n\n// مقدار پیش‌فرض در صورتی که مقدار original در لیست نبود\nreturn {\n\turl: \"https://api.telegram.org/bot\" + $('BOT INFO').item.json.TOKEN + \"/editMessageText\",\n\tmethod: \"POST\",\n\tparameters: {\n\t\tmessage_id: $item(\"0\").$node[\"Coffe-Mahdi\"].json[\"callback_query\"]?.message?.message_id || $item(\"0\").$node[\"Coffe-Mahdi\"].json[\"message\"]?.message_id, // updated message id retrieval\n        chat_id: userId,\n        text: $json.result || inputData,\n\t\tparse_mode: \"HTML\"\n\t}\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        680,
        -700
      ],
      "id": "8b224d33-d557-4032-83e3-d66df061fbae",
      "name": "Make Menu Message"
    },
    {
      "parameters": {
        "method": "={{ $json.method }}",
        "url": "={{ $json.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.parameters }}",
        "options": {}
      },
      "id": "2c9dfb4e-8799-496a-9f5b-b20046a269d8",
      "name": "SEND result Click Menu Layer 1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        900,
        -700
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e6ada1ee-8e0e-468e-91cb-db6c5e541b6b",
              "name": "TOKEN",
              "value": "7794284252:AAFOha2WHHKYIRTW2Q7eqBHEnSKt3krt378",
              "type": "string"
            },
            {
              "id": "c1ff6ad3-78d3-4380-bbda-b31222ba282b",
              "name": "bot-name",
              "value": "کافی نت مهدی",
              "type": "string"
            },
            {
              "id": "9a2ab0d9-fae7-49c8-b2b4-211192d48a60",
              "name": "support-username",
              "value": "https://t.me/mohamminch",
              "type": "string"
            },
            {
              "id": "b1d6f329-f012-493e-866b-4c6c304ca8cc",
              "name": "admin-username",
              "value": 882730020,
              "type": "number"
            },
            {
              "id": "a70c4893-7f9d-4714-9c23-e04d8e8265cb",
              "name": "ch-username",
              "value": "https://t.me/coffenetmehdi",
              "type": "string"
            },
            {
              "id": "c07f2ac2-9cbf-48fb-a2c4-a15dc63d7291",
              "name": "ch-id",
              "value": "-1002496906719",
              "type": "string"
            },
            {
              "id": "9d6e5a8d-d57e-4695-a961-4ccc60d83381",
              "name": "bot-username",
              "value": "Cafenetmahdi_bot",
              "type": "string"
            },
            {
              "id": "d11f539f-40b1-4e7d-82c1-706d2e5428a5",
              "name": "referal-creadit",
              "value": "2000",
              "type": "string"
            },
            {
              "id": "b844458a-f38a-4b05-86d5-36f586a25e83",
              "name": "bot-creator",
              "value": "mohamminch",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -600,
        20
      ],
      "id": "14595cb3-5ea0-4fd7-b899-ccc1da006dec",
      "name": "BOT INFO"
    },
    {
      "parameters": {
        "jsCode": "const inputData = $('Coffe-Mahdi').item.json.message.text;\n\nconst predefinedValues = [\"/help\", \"/settings\"];\nlet result = \"undefined\";  // مقدار پیش‌فرض\n\nif (inputData.startsWith(\"/start\")) {\n    if (inputData.includes(\"ref\")) {\n        result = \"refral\"; // اگر شامل ref باشد\n    } else {\n        result = \"start-bot\"; // اگر فقط /start باشد\n    }\n} else if (predefinedValues.includes(inputData)) {\n    result = inputData.slice(1).split(\" \")[0] + \"-bot\"; // سایر مقادیر تعریف شده\n}\n\nreturn [{\n  result: result,\n  original: inputData\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        200,
        260
      ],
      "id": "a8828096-fa7a-4c48-9561-b25048a61524",
      "name": "Merge Switcher text"
    },
    {
      "parameters": {
        "jsCode": "// تعریف لیست‌ها\nconst firstList = [\"help^\", \"userpanel^\", \"serviceslist^\",\"requestslist^\",\"joinedch^\",\"Invitefriends^\",\"club^\"];\nconst secondList = [\"userprofile^\"]; \nconst refralList = [\"joinedch^\"];  // لیست جدید برای ورودی‌های refral\n\n// داده ورودی\nconst inputData = $('Coffe-Mahdi').item.json.callback_query.data;\n\n// بررسی اینکه ورودی در کدام یک از لیست‌ها قرار دارد\nlet result = \"\";\nif (firstList.includes(inputData)) {\n  result = \"menu\";  // اگر ورودی در لیست اول باشد\n} else if (secondList.includes(inputData)) {\n  result = \"requesttodb\";  // اگر ورودی در لیست دوم باشد\n} else if (refralList.some(item => inputData.startsWith(item))) {\n  result = \"refral\";  // اگر ورودی در لیست refral باشد\n} else {\n  result = \"نیست\";  // اگر ورودی در هیچ کدام از لیست‌ها نباشد\n}\n\nreturn [{\n  result: result,\n  original: inputData\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        320,
        -300
      ],
      "id": "99043213-02ae-4769-b57a-3f7a3c6a0825",
      "name": "Merge Switcher data"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.result }}",
                    "rightValue": "=start-bot",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "start"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4cd6c267-7f74-4a2d-a679-b0c9f1c46de9",
                    "leftValue": "={{ $json.result }}",
                    "rightValue": "refral",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "refral"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f981e64a-20fc-4443-819a-ef78049a5e86",
                    "leftValue": "={{ $json.result }}",
                    "rightValue": "=undefined",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "undefined"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        380,
        260
      ],
      "id": "00dce254-78a7-4707-bc41-820530782c75",
      "name": "Switch1"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT EXISTS (\n    SELECT \"true\"\n    FROM users \n    WHERE user_id = {{ $('Coffe-Mahdi').item.json.message.from.id }}\n) AS user_exists;",
        "options": {}
      },
      "id": "947b48e9-a644-4b00-a556-06aa200edae2",
      "name": "Check user_exists",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        1260,
        500
      ],
      "credentials": {
        "mySql": {
          "id": "vSbnTOv3VnJULlhr",
          "name": "Internet-coffe-Mahdi"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f9f3477f-0c5e-4945-9bdb-a8f12de93d6c",
              "leftValue": "={{ $('Check user_exists').item.json.user_exists }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d6398fae-ad89-4855-aa99-656f461775db",
      "name": "T OR F",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1460,
        500
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO users (user_id, phone_number, balance, username, created_at )\nVALUES ({{ $('SIMORGH').item.json.message.from.id }}, '', 0, '{{ $('SIMORGH').item.json.message.from.username || \"\" }}',{{ $('SIMORGH').item.json.message.date }})\nON DUPLICATE KEY UPDATE user_id = user_id;\n",
        "options": {}
      },
      "id": "f0cf84b8-ac14-48cd-b25c-aa7b18a9c81f",
      "name": "Set User",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        1540,
        320
      ],
      "credentials": {
        "mySql": {
          "id": "vSbnTOv3VnJULlhr",
          "name": "Internet-coffe-Mahdi"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('BOT INFO').item.json['admin-username'] }}",
        "text": "=📢 #کاربر_جدید ربات شما را استارت کرد!\n\n🔹 **نام کاربر**: {{ $('Coffe-Mahdi').item.json.message.from.first_name }}\n🔹 **شناسه کاربر**: [{{ $('Coffe-Mahdi').item.json.message.from.id }}](https://t.me/{{ $('Coffe-Mahdi').item.json.message.from.username || \"\" }})\n🔹 **زمان استارت**: `{{ new Date().toLocaleDateString('fa-IR').replace(/(\\d{4})\\/(\\d{2})\\/(\\d{2})/, (match, p1, p2, p3) => `${parseInt(p1)-622}/${p2}/${p3}`) }}`",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "8fb2e03d-f992-4147-a9f7-d2e6e634ed93",
      "name": "New User Notify Admin",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1720,
        320
      ],
      "webhookId": "d6bc17b4-95a3-43b7-a95d-9d37692b96ad",
      "credentials": {
        "telegramApi": {
          "id": "yluO7J4XFRkO6HN9",
          "name": "COFFE-NET-BOT"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// گرفتن اطلاعات از نود BOT TOKEN\nconst botData = $('BOT INFO').item.json;\nconst botName = botData[\"bot-name\"] || \"نام بات تعریف نشده\";\nconst botsupport = botData[\"support-username\"] || \"پشتیبانی ندارد\";\n\n// دریافت مقدار original از نود قبلی\nconst inputData = $('Merge Switcher data').item.json.original;\n\n// ساخت کوئری SQL برای userprofile^\nif (inputData === \"userprofile^\") {\n    const userId = $item(\"0\").$node[\"Coffe-Mahdi\"].json[\"callback_query\"]?.message?.chat?.id || \n                  $item(\"0\").$node[\"Coffe-Mahdi\"].json[\"message\"]?.from?.id;\n\n    if (userId && !isNaN(userId)) {\n        // Removed table creation query; using only SELECT query.\n        const combinedQuery = `\nSELECT \n  (SELECT balance FROM users WHERE user_id = ${userId}) AS balance,\n  (SELECT COUNT(*) FROM referrals WHERE inviter_user_id = ${userId}) AS referralCount,\n  (SELECT COALESCE(SUM(inviter_cart_amount), 0) FROM referrals WHERE inviter_user_id = ${userId}) AS totalInviterCart;\n        `;\n        return {\n            json: {\n                query: combinedQuery\n            }\n        };\n    } else {\n        return {\n            json: {\n                error: \"شناسه کاربر یافت نشد یا نامعتبر است\",\n                status: \"error\"\n            }\n        };\n    }\n} else {\n    return {\n        json: {\n            result: $json.result || \"نتیجه‌ای یافت نشد\",\n            original: inputData\n        }\n    };\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        740,
        -520
      ],
      "id": "493f97d9-e444-46a0-b5e1-cea0ec23987e",
      "name": "Make query"
    },
    {
      "parameters": {
        "jsCode": "// گرفتن اطلاعات از نود BOT TOKEN\nconst botData = $('BOT INFO').item.json; // خواندن داده‌های نود BOT TOKEN\nconst botName = botData[\"bot-name\"] || \"نام بات تعریف نشده\"; // دریافت نام بات\nconst botsupport = botData[\"support-username\"] || \"پشتیبانی ندارد\"; // دریافت یوزرنیم پشتیبانی\n\n// دریافت مقدار original از نود قبلی\nconst inputData = $('Merge Switcher data').item.json.original;\n\n// دریافت اطلاعات کاربر\nconst rawUserId = $item(\"0\").$node[\"Coffe-Mahdi\"].json[\"callback_query\"]?.message?.chat?.username ||\n                  $item(\"0\").$node[\"Coffe-Mahdi\"].json[\"message\"]?.from?.username;\nconst userId = rawUserId !== \"undifinded\" ? rawUserId : \"\";\n\n// دریافت موجودی کاربر از نود Request-to-db\nconst userBalance = $item(\"0\").$node[\"Request-to-db\"].json.balance || \"0\";\n// New extraction for additional fields with default empty string if undefined\nconst referralCount = $item(\"0\").$node[\"Request-to-db\"].json.referralCount || \"\";\nconst totalInviterCart = $item(\"0\").$node[\"Request-to-db\"].json.totalInviterCart || \"\";\n\n// جدا کردن سه رقم سه رقم موجودی\nconst formattedBalance = userBalance.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\nconst formattotalInviterCart = totalInviterCart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n// تعریف پیام‌ها و دکمه‌های مربوط به هر مقدار original\nconst responses = {\n    \"userprofile^\": {\n        // If userId exists, prepend @, otherwise leave blank.\n        message: `اطلاعات حساب شما:\\n\\nنام کاربری: ${userId ? \"@\" + userId : \"\"}\\nموجودی: ${formattedBalance} تومان\\n\\nتعداد دعوت‌ها: ${referralCount}\\nمبلغ هدیه دریافتی: ${formattotalInviterCart}`,\n        buttons: [\n           \n                 [{ text: \"» اعتبار هدیه\", callback_data: \"Invitefriends^\" },\n                { text: \"» افزایش موجودی\", callback_data: \"increasebalance^\" }],\n                [{ text: \"» بازگشت\", callback_data: \"userpanel^\" }]\n            \n        ]\n    }\n    // می‌توانید کلیدواژه‌های دیگر را به اینجا اضافه کنید\n};\n\n// بررسی اینکه مقدار original در لیست پاسخ‌های ما وجود دارد یا نه\nif (responses[inputData]) {\n    return {\n        json: {\n            message: responses[inputData].message,\n            reply_markup: {\n                inline_keyboard: responses[inputData].buttons // دکمه‌ها را جداگانه قرار می‌دهد تا زیر هم باشند\n            },\n            parse_mode: \"HTML\"\n        }\n    };\n}\n\n// مقدار پیش‌فرض در صورتی که مقدار original در لیست نبود\nreturn {\n    json: {\n        result: $json.result,\n        original: inputData\n    }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1080,
        -520
      ],
      "id": "81d1043b-37d1-413d-bedd-1d1d2098920b",
      "name": "Make Menu Message2"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "{{ $json.query }}",
        "options": {}
      },
      "id": "cfd64dbb-a168-40ec-a4f9-bd13c063c4b5",
      "name": "Request-to-db",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        900,
        -520
      ],
      "credentials": {
        "mySql": {
          "id": "vSbnTOv3VnJULlhr",
          "name": "Internet-coffe-Mahdi"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.telegram.org/bot{{ $('BOT INFO').item.json.TOKEN }}/editMessageText",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "chat_id",
              "value": "={{ $('Coffe-Mahdi').item.json.callback_query.message.chat.id }}"
            },
            {
              "name": "text",
              "value": "={{ $json.message }}"
            },
            {
              "name": "reply_markup",
              "value": "={{ $json.reply_markup }}"
            },
            {
              "name": "message_id",
              "value": "={{ $('Coffe-Mahdi').item.json.callback_query.message.message_id }}"
            },
            {
              "name": "parse_mode",
              "value": "={{ $json.parse_mode }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f89fc478-79a7-43a4-928a-ff5ff64d8b96",
      "name": "SEND result Click Menu Layer 2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1280,
        -520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "033e58ab-9bff-4372-b994-98c95e783a10",
              "leftValue": "={{ $('Coffe-Mahdi').item.json.callback_query }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "df38376a-48a2-412b-aa30-8a87b1aa27f0",
      "name": "Check_Message_type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        40,
        40
      ]
    },
    {
      "parameters": {
        "resource": "chat",
        "operation": "member",
        "chatId": "={{ $('BOT INFO').item.json['ch-id'] }}",
        "userId": "={{ ($('Coffe-Mahdi').item.json.callback_query?.message?.chat?.id != null && $('Coffe-Mahdi').item.json.callback_query?.message?.chat?.id !== '') ? $('Coffe-Mahdi').item.json.callback_query.message.chat.id : ($('Coffe-Mahdi').item.json.message?.from?.id != null && $('Coffe-Mahdi').item.json.message?.from?.id !== '') ? $('Coffe-Mahdi').item.json.message.from.id : ($('Coffe-Mahdi').item.json.my_chat_member?.from?.id != null && $('Coffe-Mahdi').item.json.my_chat_member.from.id !== '') ? $('Coffe-Mahdi').item.json.my_chat_member.from.id : '' }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -400,
        20
      ],
      "id": "a95a574b-497a-4f10-ac16-e2f10c5bfa0c",
      "name": "Check Channel User",
      "webhookId": "95fca364-1086-47d5-a582-f763dcad3cb2",
      "credentials": {
        "telegramApi": {
          "id": "yluO7J4XFRkO6HN9",
          "name": "COFFE-NET-BOT"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "093df3c4-a8f5-45c8-9dc5-d448c3aaec76",
              "leftValue": "={{ $('Check Channel User').item.json.result.status }}",
              "rightValue": "member",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -240,
        20
      ],
      "id": "9a88e977-0fbc-4c53-890f-250cd1766097",
      "name": "If"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8cbf4405-ec74-43e5-bc14-ce352eea6fcb",
              "leftValue": "={{ $json.result.status }}",
              "rightValue": "creator",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -160,
        -160
      ],
      "id": "f6819c67-5158-4cb1-be3b-3cb3e2b8ea61",
      "name": "Check Creator"
    },
    {
      "parameters": {
        "chatId": "={{ $('If').item.json.result.user.id }}",
        "text": "={{ $('Coffe-Mahdi').item.json.message?.text?.includes('ref') ? 'سلام برای دریافت اعتبار هدیه و استفاده از ربات باید در کانال زیر عضو شوید \\n\\nپس از عضو شدن روی دکمه \"عضو شدم\" کلیک کنید!' : $('Coffe-Mahdi').item.json.message?.text === undefined ? 'هنوز عضو نشدید! اول عضو شوید و سپس روی \"عضو شدم\" کلیک کنید!' : 'سلام برای ادامه فعالیت نیاز هست که داخل کانال زیر عضو شوید \\n\\nپس از عضو شدن روی دکمه \"عضو شدم\" کلیک کنید!' }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "=کانال {{ $('BOT INFO').item.json['bot-name'] }}",
                    "additionalFields": {
                      "url": "={{ $('BOT INFO').item.json['ch-username'] }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "عضو شدم!",
                    "additionalFields": {
                      "callback_data": "={{ \n  $('Coffe-Mahdi').item.json.message?.text?.split(\"ref\")[1] \n  ? `joinedch^${$('Coffe-Mahdi').item.json.message.text.split(\"ref\")[1]}` \n  : $('Coffe-Mahdi').item.json.message?.text ? 'joinedch^' : $('Coffe-Mahdi').item.json.callback_query?.data || 'joinedch^' \n}}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -100,
        -340
      ],
      "id": "7ab508aa-f09f-4314-aaae-0b03262813fb",
      "name": "LINK JOIN",
      "webhookId": "b42bca7e-c028-482a-9fd8-fea2f9a8d3e8",
      "credentials": {
        "telegramApi": {
          "id": "yluO7J4XFRkO6HN9",
          "name": "COFFE-NET-BOT"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT EXISTS (\n    SELECT \"true\"\n    FROM users \n    WHERE user_id = {{ $('Coffe-Mahdi').item.json.callback_query.message.chat.id }}\n) AS user_exists;",
        "options": {}
      },
      "id": "869b50c9-8781-4e23-961d-f27315b1f4fc",
      "name": "Check user_exists1",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        1080,
        -700
      ],
      "credentials": {
        "mySql": {
          "id": "vSbnTOv3VnJULlhr",
          "name": "Internet-coffe-Mahdi"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f9f3477f-0c5e-4945-9bdb-a8f12de93d6c",
              "leftValue": "={{ $('Check user_exists1').item.json.user_exists }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "378fe5b5-7770-4cf2-a219-938a10bd115b",
      "name": "T OR F1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1260,
        -700
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO users (user_id, phone_number, balance, username, created_at )\nVALUES ({{ $('SIMORGH').item.json.callback_query.message.chat.id }}, '', 0, '{{ $('SIMORGH').item.json.callback_query.message.chat.username || \"\" }}',{{ $('SIMORGH').item.json.callback_query.message.date }})\nON DUPLICATE KEY UPDATE user_id = user_id;\n",
        "options": {}
      },
      "id": "49b421d0-2d98-42d0-95bc-7b7fd152b328",
      "name": "Set User1",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        1340,
        -880
      ],
      "credentials": {
        "mySql": {
          "id": "vSbnTOv3VnJULlhr",
          "name": "Internet-coffe-Mahdi"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('BOT INFO').item.json['admin-username'] }}",
        "text": "=📢 #کاربر_جدید ربات شما را استارت کرد!\n\n🔹 **نام کاربر**: {{$('Coffe-Mahdi').item.json.callback_query.message.chat.first_name  }}\n🔹 **شناسه کاربر**: [{{ $('Coffe-Mahdi').item.json.callback_query.message.chat.id }}](https://t.me/{{ $('Coffe-Mahdi').item.json.callback_query.message.chat.username }} || \"\" }})\n🔹 **زمان استارت**: `{{ new Date().toLocaleDateString('fa-IR').replace(/(\\d{4})\\/(\\d{2})\\/(\\d{2})/, (match, p1, p2, p3) => `${parseInt(p1)-622}/${p2}/${p3}`) }}`",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "f8e5495c-043e-4570-b5b3-228036232a5d",
      "name": "New User Notify Admin1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1520,
        -880
      ],
      "webhookId": "4c00a93b-d799-4b71-87e2-da7393b24c92",
      "credentials": {
        "telegramApi": {
          "id": "yluO7J4XFRkO6HN9",
          "name": "COFFE-NET-BOT"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// گرفتن اطلاعات از نود BOT TOKEN\nconst botData = $('BOT INFO').item.json; // خواندن داده‌های نود BOT TOKEN\nconst botName = botData[\"bot-name\"] || \"نام بات تعریف نشده\"; // دریافت نام بات\nconst botsupport = botData[\"support-username\"] || \"پشتیبانی ندارد\"; // دریافت یوزرنیم پشتیبانی\nconst botadmin = botData[\"admin-username\"] || \"ادمین ندارد\"; // دریافت یوزرنیم ادمین\nconst bottoken = botData[\"TOKEN\"] || \"توکن ندارد\"; // دریافت توکن بات\nconst botcreator = botData[\"bot-creator\"] || \"سازنده ندارد\"; // دریافت نام سازنده بات\n\n// دریافت مقدار original از نود قبلی\nconst inputData = $('Merge Switcher text').item.json.original;\nconst userData = $('Coffe-Mahdi').item.json.message.from; // فرض کنید اطلاعات کاربر را از نود User Info می‌گیرید\nconst isAdmin = userData[\"id\"] === botadmin; // بررسی اینکه کاربر ادمین است یا نه\n\n// تعریف پیام‌ها و دکمه‌های مربوط به هر مقدار original\nconst responses = {\n    \"/start\": {\n        message: `کاربر گرامی\\nلطفا یکی از گزینه‌های زیر رو برای ${botName} انتخاب کنید :`,\n        buttons: [\n            [{ text: `لیست خدمات ${botName}`, callback_data: \"serviceslist^\" }],\n            [\n                { text: \"💎 اعتبار شما\", callback_data: \"userprofile^\" },\n                { text: \"🛍 باشگاه مشتریان \", callback_data: \"club^\" }\n            ],\n            [{ text: `❣️ دعوت از دوستان`, callback_data: \"Invitefriends^\" }],\n            [\n                { text: \"» راهنما\", callback_data: \"help^\" },\n                { text: \"» پشتیبانی\", url: `${botsupport}` }\n            ]\n        ]\n    },\n    \"admin_panel\": {\n        message: `ادمین گرامی\\nبه پنل مدیریت ${botName} خوش آمدید :`,\n        buttons: [\n            [{ text: \"» مدیریت کاربران\", callback_data: \"manageusers^\" }],\n            [{ text: \"» گزارش‌ها\", callback_data: \"reports^\" }],\n            [{ text: \"» تنظیمات\", callback_data: \"settings^\" }]\n        ]\n    }\n};\n\n// تابع برای ساختن دستور curl\nfunction createCurlCommand(chatId, message, replyMarkup) {\n    return {\n        url: `https://api.telegram.org/bot${bottoken}/SendMessage`,\n        method: \"POST\",\n        parameters: {\n            chat_id: chatId,\n            text: message,\n            reply_markup: replyMarkup,\n            parse_mode: \"HTML\"\n        }\n    };\n}\n\n// تابع برای ساختن پاسخ پیش‌فرض\nfunction createDefaultResponse(inputData, userData) {\n    const message = \"⚠️ گزارش خطا: ورودی تعریف نشده است.\\n\\n\" +\n                    \"🔍 مقدار ورودی: <code>\" + inputData + \"</code>\\n\\n\" +\n                    \"👤 اطلاعات کاربر:\\n\" +\n                    \"ID: \" + userData.id + \"\\n\" +\n                    \"نام: \" + (userData.first_name || \"نامشخص\") + \"\\n\" +\n                    \"نام خانوادگی: \" + (userData.last_name || \"نامشخص\") + \"\\n\" +\n                    \"یوزرنیم: @\" + (userData.username || \"نامشخص\") + \"\\n\\n\" +\n                    \"📌 لطفاً بررسی کنید و در صورت نیاز با پشتیبانی تماس بگیرید.\\n\\n\" +\n                    \"©️ 2023 \" + botName;\n    const buttons = [\n        [{ text: \"» تماس با سازنده\", url: `https://t.me/${botcreator}` }]\n    ];\n    return {\n        message,\n        buttons,\n        curl: createCurlCommand(botadmin, message, { inline_keyboard: buttons })\n    };\n}\n\n// بررسی اینکه مقدار original در لیست پاسخ‌های ما وجود دارد یا نه\nif (responses[inputData]) {\n    const response = isAdmin && inputData === \"/start\" ? responses[\"admin_panel\"] : responses[inputData];\n    const result = {\n        json: {\n            message: response.message,\n            reply_markup: {\n                inline_keyboard: response.buttons // دکمه‌ها را جداگانه قرار می‌دهد تا زیر هم باشند\n            },\n            parse_mode: \"HTML\"\n        }\n    };\n\n    // ساختن دستور curl برای ورودی /start\n    if (inputData === \"/start\") {\n        result.json.user = {\n            url: `https://api.telegram.org/bot${bottoken}/SendMessage`,\n            method: \"POST\",\n            parameters: {\n                chat_id: userData[\"id\"],\n                text: response.message,\n                reply_markup: result.json.reply_markup,\n                parse_mode: \"HTML\"\n            }\n        };\n\n        const adminMessage = `یک نفر ربات را استارت کرده\\n\\n` +\n                             `نام: ${userData.first_name || \"نامشخص\"}\\n` +\n                             `نام خانوادگی: ${userData.last_name || \"نامشخص\"}\\n` +\n                             `یوزرنیم: @${userData.username || \"نامشخص\"}`;\n        result.json.admin = {\n            url: `https://api.telegram.org/bot${bottoken}/SendMessage`,\n            method: \"POST\",\n            parameters: {\n                chat_id: botadmin,\n                text: adminMessage,\n                parse_mode: \"HTML\"\n            }\n        };\n    }\n\n    return result;\n}\n\n// مقدار پیش‌فرض در صورتی که مقدار original در لیست نبود\nconst defaultResponse = createDefaultResponse(inputData, userData);\n\n// ارسال پیام خطا به کاربر\nconst userErrorMessage = {\n    url: `https://api.telegram.org/bot${bottoken}/SendMessage`,\n    method: \"POST\",\n    parameters: {\n        chat_id: userData[\"id\"],\n        text: \"متوجه نشدم چی گفتی! لطفاً دوباره تلاش کنید.\",\n        parse_mode: \"HTML\"\n    }\n};\n\nreturn {\n    json: {\n        message: defaultResponse.message,\n        reply_markup: {\n            inline_keyboard: defaultResponse.buttons\n        },\n        parse_mode: \"HTML\",\n        curl: defaultResponse.curl,\n        userError: userErrorMessage\n    }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        660,
        500
      ],
      "id": "dcbd95af-4601-477e-8d2e-561845edfa7c",
      "name": "Make Menu Message3"
    },
    {
      "parameters": {
        "method": "={{ $json.user.method }}",
        "url": "={{ $json.user.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.user.parameters }}",
        "options": {}
      },
      "id": "ead5b15c-b585-4066-bac7-096e75ceff13",
      "name": "SEND result Click Menu TO USER",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        840,
        500
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "method": "={{ $('Make Menu Message3').item.json.admin.method }}",
        "url": "={{ $('Make Menu Message3').item.json.admin.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $('Make Menu Message3').item.json.admin.parameters }}",
        "options": {}
      },
      "id": "59b21a29-f5d7-4528-88d5-ce2ef76a6400",
      "name": "SEND result Click Menu TO ADMIN",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1060,
        500
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "// گرفتن اطلاعات از نود BOT TOKEN\nconst botData = $('BOT INFO').item.json; // خواندن داده‌های نود BOT TOKEN\nconst botName = botData[\"bot-name\"] || \"نام بات تعریف نشده\"; // دریافت نام بات\nconst botsupport = botData[\"support-username\"] || \"پشتیبانی ندارد\"; // دریافت یوزرنیم پشتیبانی\nconst botadmin = botData[\"admin-username\"] || \"ادمین ندارد\"; // دریافت یوزرنیم ادمین\nconst bottoken = botData[\"TOKEN\"] || \"توکن ندارد\"; // دریافت توکن بات\nconst botcreator = botData[\"bot-creator\"] || \"سازنده ندارد\"; // دریافت نام سازنده بات\n\n// دریافت مقدار original از نود قبلی\nconst inputData = $('Merge Switcher text').item.json.original;\nconst userData = $('Coffe-Mahdi').item.json.message.from; // فرض کنید اطلاعات کاربر را از نود User Info می‌گیرید\nconst isAdmin = userData[\"id\"] === botadmin; // بررسی اینکه کاربر ادمین است یا نه\n\n// تابع برای ساختن دستور curl\nfunction createCurlCommand(chatId, message, replyMarkup) {\n    return {\n        url: `https://api.telegram.org/bot${bottoken}/SendMessage`,\n        method: \"POST\",\n        parameters: {\n            chat_id: chatId,\n            text: message,\n            reply_markup: replyMarkup,\n            parse_mode: \"HTML\"\n        }\n    };\n}\n\n// تابع برای ساختن پاسخ پیش‌فرض\nfunction createDefaultResponse(inputData, userData) {\n    const message = \"⚠️ گزارش خطا: ورودی تعریف نشده است.\\n\\n\" +\n                    \"🔍 مقدار ورودی: <code>\" + inputData + \"</code>\\n\\n\" +\n                    \"👤 اطلاعات کاربر:\\n\" +\n                    \"ID: \" + userData.id + \"\\n\" +\n                    \"نام: \" + (userData.first_name || \"نامشخص\") + \"\\n\" +\n                    \"نام خانوادگی: \" + (userData.last_name || \"نامشخص\") + \"\\n\" +\n                    \"یوزرنیم: @\" + (userData.username || \"نامشخص\") + \"\\n\\n\" +\n                    \"📌 لطفاً بررسی کنید و در صورت نیاز با پشتیبانی تماس بگیرید.\\n\\n\" +\n                    \"©️ 2023 \" + botName;\n    const buttons = [\n        [{ text: \"» تماس با سازنده\", url: `https://t.me/${botcreator}` }]\n    ];\n    return {\n        message,\n        buttons,\n        curl: createCurlCommand(botadmin, message, { inline_keyboard: buttons })\n    };\n}\n\n// بررسی اینکه مقدار original برابر undefined است یا نه\nif (inputData === undefined) {\n    const defaultResponse = createDefaultResponse(inputData, userData);\n\n    // ارسال پیام خطا به کاربر\n    const userErrorMessage = {\n        url: `https://api.telegram.org/bot${bottoken}/SendMessage`,\n        method: \"POST\",\n        parameters: {\n            chat_id: userData[\"id\"],\n            text: \"متوجه نشدم چی گفتی! لطفاً دوباره تلاش کنید.\",\n            parse_mode: \"HTML\"\n        }\n    };\n\n    return {\n        json: {\n            message: defaultResponse.message,\n            reply_markup: {\n                inline_keyboard: defaultResponse.buttons\n            },\n            parse_mode: \"HTML\",\n            curl: defaultResponse.curl,\n            userError: userErrorMessage\n        }\n    };\n}\n\n// مقدار پیش‌فرض در صورتی که مقدار original در لیست نبود\nconst defaultResponse = createDefaultResponse(inputData, userData);\n\n// ارسال پیام خطا به کاربر\nconst userErrorMessage = {\n    url: `https://api.telegram.org/bot${bottoken}/SendMessage`,\n    method: \"POST\",\n    parameters: {\n        chat_id: userData[\"id\"],\n        text: \"متوجه نشدم چی گفتی! لطفاً دوباره تلاش کنید.\",\n        parse_mode: \"HTML\"\n    }\n};\n\nreturn {\n    json: {\n        message: defaultResponse.message,\n        reply_markup: {\n            inline_keyboard: defaultResponse.buttons\n        },\n        parse_mode: \"HTML\",\n        curl: defaultResponse.curl,\n        userError: userErrorMessage\n    }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        600,
        860
      ],
      "id": "4230a6e7-d2df-46fd-9d87-b97071ae705a",
      "name": "Make Menu Message4"
    },
    {
      "parameters": {
        "method": "={{ $('Make Menu Message4').item.json.userError.method }}",
        "url": "={{ $('Make Menu Message4').item.json.userError.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $('Make Menu Message4').item.json.userError.parameters }}",
        "options": {}
      },
      "id": "ae6b745b-ab9a-44fe-b3e7-291d1761b9a8",
      "name": "SEND result Click Menu TO USER1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        800,
        860
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "method": "={{ $('Make Menu Message4').item.json.curl.method }}",
        "url": "={{ $('Make Menu Message4').item.json.curl.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $('Make Menu Message4').item.json.curl.parameters }}",
        "options": {}
      },
      "id": "5ffb6181-bd93-4be2-8c34-e056b604bbb9",
      "name": "SEND result Click Menu TO ADMIN1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1020,
        860
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "// گرفتن اطلاعات از نود BOT TOKEN\nconst botData = $('BOT INFO').item.json; // خواندن داده‌های نود BOT TOKEN\nconst botName = botData[\"bot-name\"] || \"نام بات تعریف نشده\"; // دریافت نام بات\nconst botsupport = botData[\"support-username\"] || \"پشتیبانی ندارد\"; // دریافت یوزرنیم پشتیبانی\nconst botadmin = botData[\"admin-username\"] || \"ادمین ندارد\"; // دریافت یوزرنیم ادمین\nconst bottoken = botData[\"TOKEN\"] || \"توکن ندارد\"; // دریافت توکن بات\nconst botcreator = botData[\"bot-creator\"] || \"سازنده ندارد\"; // دریافت نام سازنده بات\nconst botreferalcreadit = parseInt(botData[\"referal-creadit\"] || \"0\", 10); // دریافت مقدار اعتبار رفرال و تبدیل به عدد\n\n// دریافت مقدار original از نود قبلی\nconst inputData = $('Merge Switcher text').item.json.original; // ورودی اصلی از نود قبلی\nconst userData = $('Coffe-Mahdi').item.json.message.from; // اطلاعات کاربر را از نود User Info می‌گیرید\n\n// نود بررسی موجودیت کاربر\nconst userExists = $('Check User Existence').item.json.user_exists; // خروجی نود بررسی موجودیت کاربر\n\n// تابع برای فرمت‌بندی مبلغ رفرال به سه رقم سه رقم\nfunction formatNumberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\n// لاگ کردن ورودی‌ها برای بررسی\nlet log = {\n    inputData: inputData,\n};\n\n// چک کردن ورودی /start ref<referral_id>\nif (inputData && inputData.startsWith(\"/start ref\")) {\n    const refCodeMatch = inputData.match(/\\/start ref(\\d+)/);\n    if (refCodeMatch) {\n        const referrerId = refCodeMatch[1];\n\n        // بررسی اینکه کاربر با لینک خودش وارد شده یا نه\n        if (String(userData[\"id\"]) === String(referrerId)) {\n            const selfReferralMessage = \"شما نمی‌توانید با لینک خودتان وارد شوید! لطفاً دوستان خود را دعوت کنید.\";\n\n            const result = {\n                json: {}\n            };\n            result.json = {\n                url: `https://api.telegram.org/bot${bottoken}/SendMessage`,\n                method: \"POST\",\n                parameters: {\n                    chat_id: userData[\"id\"],\n                    text: selfReferralMessage,\n                    parse_mode: \"HTML\",\n                    reply_markup: {\n                        inline_keyboard: [[{ text: \"دعوت از دوستان\", callback_data: \"Invitefriends^\" }]]\n                    }\n                }\n            };\n\n            return [{\n                result: \"self_referral\",\n                userMessage: result.json,\n                log: log\n            }];\n        }\n\n        // ادامه بررسی برای موارد دیگر\n        let referralMessage = \"\";\n        let referrerMessage = null;\n        let adminMessage = \"\";\n\n        if (userExists === 1) {\n            referralMessage = \"شما قبلاً در ربات عضو شده‌اید. 😉\";\n            referrerMessage = null; // برای دعوت‌کننده پیام ارسال نمی‌شود\n            adminMessage = \"\"; // برای ادمین هیچ گزارشی ارسال نمی‌شود\n        } else {\n            // منطق مربوط به کاربر جدید که با لینک دیگری وارد شده است\n            const totalReferralAmount = botreferalcreadit * 2; // جمع مبلغ رفرال برای هر دو طرف\n            referralMessage = `🎉 مبلغ ${formatNumberWithCommas(botreferalcreadit)} تومان به کیف پول شما اضافه شد! 💰`;\n            referrerMessage = `🎉 فردی با لینک شما وارد ربات شد و مبلغ ${formatNumberWithCommas(botreferalcreadit)} تومان به کیف پول شما اضافه شد! 💰`;\n            adminMessage = `📊 گزارش جدید | یک یوزر جدید با دعوت به ربات پیوست!\\n\\n- دعوت‌شونده: ${userData.first_name || \"نامشخص\"} ${userData.last_name || \"نامشخص\"} (@${userData.username || \"نامشخص\"})\\n- مبلغ رفرال: ${formatNumberWithCommas(totalReferralAmount)} تومان\\n- دعوت‌کننده: ${referrerId}\\n- دعوت‌شونده: ${userData[\"id\"]}`;\n        }\n\n        const result = {\n            json: {\n                user: {\n                    url: `https://api.telegram.org/bot${bottoken}/SendMessage`,\n                    method: \"POST\",\n                    parameters: {\n                        chat_id: userData[\"id\"],\n                        text: referralMessage,\n                        parse_mode: \"HTML\"\n                    }\n                }\n            }\n        };\n\n        if (referrerMessage) {\n            result.json.referrer = {\n                url: `https://api.telegram.org/bot${bottoken}/SendMessage`,\n                method: \"POST\",\n                parameters: {\n                    chat_id: referrerId,\n                    text: referrerMessage,\n                    parse_mode: \"HTML\"\n                }\n            };\n        }\n\n        result.json.admin = {\n            url: `https://api.telegram.org/bot${bottoken}/SendMessage`,\n            method: \"POST\",\n            parameters: {\n                chat_id: botadmin,\n                text: adminMessage,\n                parse_mode: \"HTML\"\n            }\n        };\n\n        log[\"result\"] = result;  // نمایش نتیجه نهایی\n\n        return [{\n            result: userExists === 1 ? \"user_exists\" : \"new_referral\",\n            original: inputData,\n            userMessage: result.json.user,\n            referrerMessage: referrerMessage ? result.json.referrer : null,\n            adminMessage: result.json.admin,\n            log: log\n        }];\n    } else {\n        log[\"referralIdError\"] = \"No referral ID found in the input\";\n    }\n} else {\n    log[\"error\"] = \"Input does not match /start ref pattern\";\n}\n\n// ارسال پیام خطا به کاربر در صورتی که ورودی غیرمعتبر باشد\nconst userErrorMessage = {\n    url: `https://api.telegram.org/bot${bottoken}/SendMessage`,\n    method: \"POST\",\n    parameters: {\n        chat_id: userData[\"id\"],\n        text: \"متوجه نشدم چی گفتی! لطفاً دوباره تلاش کنید. 🤔\",\n        parse_mode: \"HTML\"\n    }\n};\n\nlog[\"userErrorMessage\"] = userErrorMessage;  // اضافه کردن پیام خطا به لاگ\n\nreturn {\n    json: {\n        userError: userErrorMessage,\n        log: log // لاگ را در خروجی نمایش می‌دهیم\n    }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        860,
        700
      ],
      "id": "4f243b08-0a62-4e50-96f6-05d811669adf",
      "name": "Make Menu Message5"
    },
    {
      "parameters": {
        "method": "={{ $json.userMessage.method }}",
        "url": "={{ $json.userMessage.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.userMessage.parameters }}",
        "options": {}
      },
      "id": "814a28fe-44eb-4b66-8726-b980c84fd51a",
      "name": "Send To User",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1040,
        700
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "method": "={{ $('Make Menu Message5').item.json.referrerMessage.method }}",
        "url": "={{ $('Make Menu Message5').item.json.referrerMessage.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $('Make Menu Message5').item.json.referrerMessage.parameters }}",
        "options": {}
      },
      "id": "0fe05e7f-87e6-41ae-82b3-4788d6ae8aca",
      "name": "Send To Referrer",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1240,
        700
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "method": "={{ $('Make Menu Message5').item.json.adminMessage.method }}",
        "url": "={{ $('Make Menu Message5').item.json.adminMessage.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $('Make Menu Message5').item.json.adminMessage.parameters }}",
        "options": {}
      },
      "id": "25b1a48f-c04f-41c1-887a-6b7981c22450",
      "name": "Send To Admin",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1420,
        700
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT CASE \n    WHEN EXISTS (SELECT 1 FROM users WHERE user_id = {{ $('If').item.json.result.user.id }}) THEN true\n    ELSE false\nEND AS user_exists;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        640,
        700
      ],
      "id": "15ba7e00-d490-4646-9e6b-c8d37d8d6637",
      "name": "Check User Existence",
      "credentials": {
        "mySql": {
          "id": "vSbnTOv3VnJULlhr",
          "name": "Internet-coffe-Mahdi"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- اضافه کردن مبلغ به موجودی کاربر دعوت‌شونده\nINSERT INTO users (user_id, phone_number, balance, username, created_at)\nVALUES ({{ $('Send To User').item.json.result.chat.id }}, '', {{ $('BOT INFO').item.json[\"referal-creadit\"] }}, '{{ $('Send To User').item.json.result.chat.username || '' }}', {{ $('SIMORGH').item.json.message.date }})\nON DUPLICATE KEY UPDATE \n    balance = balance + {{ $('BOT INFO').item.json[\"referal-creadit\"] }};  \n\n-- اضافه کردن مبلغ به موجودی دعوت‌کننده\nINSERT INTO users (user_id, phone_number, balance, username, created_at)\nVALUES ({{ $('Send To Referrer').item.json.result.chat.id }}, '', {{ $('BOT INFO').item.json[\"referal-creadit\"] }}, '{{ $('Send To Referrer').item.json.result.chat.username || '' }}', {{ $('SIMORGH').item.json.message.date }})\nON DUPLICATE KEY UPDATE \n    balance = balance + {{ $('BOT INFO').item.json[\"referal-creadit\"] }};  \n\n-- ثبت اطلاعات در جدول referrals\nINSERT INTO referrals (inviter_user_id, invitee_user_id, inviter_cart_amount, invitee_cart_amount, referral_date)\nVALUES \n(\n    {{ $('Send To Referrer').item.json.result.chat.id }},  -- دعوت‌کننده\n    {{ $('Send To User').item.json.result.chat.id }},     -- دعوت‌شونده\n    {{ $('BOT INFO').item.json[\"referal-creadit\"] }},      -- مبلغ سبد خرید دعوت‌کننده\n    {{ $('BOT INFO').item.json[\"referal-creadit\"] }},      -- مبلغ سبد خرید دعوت‌شونده\n    CURRENT_TIMESTAMP                                      -- تاریخ و زمان ارجاع\n)",
        "options": {}
      },
      "id": "6c9b1168-ccb2-4843-8319-6975140e663d",
      "name": "Set User AND UPDATE balance",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        1620,
        700
      ],
      "credentials": {
        "mySql": {
          "id": "vSbnTOv3VnJULlhr",
          "name": "Internet-coffe-Mahdi"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// گرفتن اطلاعات از نود BOT TOKEN\nconst botData = $('BOT INFO').item.json; // خواندن داده‌های نود BOT TOKEN\nconst botName = botData[\"bot-name\"] || \"نام بات تعریف نشده\"; // دریافت نام بات\nconst botsupport = botData[\"support-username\"] || \"پشتیبانی ندارد\"; // دریافت یوزرنیم پشتیبانی\nconst botadmin = botData[\"admin-username\"] || \"ادمین ندارد\"; // دریافت یوزرنیم ادمین\nconst bottoken = botData[\"TOKEN\"] || \"توکن ندارد\"; // دریافت توکن بات\nconst botcreator = botData[\"bot-creator\"] || \"سازنده ندارد\"; // دریافت نام سازنده بات\nconst botreferalcreadit = parseInt(botData[\"referal-creadit\"] || \"0\", 10); // دریافت مقدار اعتبار رفرال و تبدیل به عدد\n\n// دریافت مقدار original از نود قبلی\nconst inputData = $('Merge Switcher data').item.json.original; // ورودی اصلی از نود قبلی\nconst userData = $('Coffe-Mahdi').item.json.callback_query.from; // اطلاعات کاربر را از نود User Info می‌گیرید\nconst MessageData = $('Coffe-Mahdi').item.json.callback_query.message;\n\n// نود بررسی موجودیت کاربر\nconst userExists = $('Check User Existence1').item.json.user_exists; // خروجی نود بررسی موجودیت کاربر\n\n// تابع برای فرمت‌بندی مبلغ رفرال به سه رقم سه رقم\nfunction formatNumberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\n// لاگ کردن ورودی‌ها برای بررسی\nlet log = {\n    inputData: inputData,\n};\n\n// چک کردن ورودی جدید شبیه به \"joinedch^1983438871\"\nif (inputData && inputData.startsWith(\"joinedch^\")) {\n    const refCodeMatch = inputData.match(/joinedch\\^(\\d+)/);  // استفاده از regex برای استخراج یوزر آیدی دعوت‌کننده\n    if (refCodeMatch) {\n        const referrerId = refCodeMatch[1];  // استخراج یوزر آیدی دعوت‌کننده\n\n        // بررسی اینکه کاربر با لینک خودش وارد شده یا نه\n        if (String(userData[\"id\"]) === String(referrerId)) {\n            const selfReferralMessage = \"شما نمی‌توانید با لینک خودتان وارد شوید! لطفاً دوستان خود را دعوت کنید.\";\n\n            const result = {\n                json: {}\n            };\n            result.json = {\n                url: `https://api.telegram.org/bot${bottoken}/editMessageText`,\n                method: \"POST\",\n                parameters: {\n                    chat_id: userData[\"id\"],\n                    text: selfReferralMessage,\n                    message_id: MessageData[\"message_id\"],\n                    parse_mode: \"HTML\",\n                    reply_markup: {\n                        inline_keyboard: [[{ text: \"دعوت از دوستان\", callback_data: \"Invitefriends^\" }]]\n                    }\n                }\n            };\n\n            return [{\n                result: \"self_referral\",\n                userMessage: result.json,\n                log: log\n            }];\n        }\n\n        // ادامه بررسی برای موارد دیگر\n        let referralMessage = \"\";\n        let referrerMessage = null;\n        let adminMessage = \"\";\n\n        if (userExists === 1) {\n            referralMessage = \"شما قبلاً در ربات عضو شده‌اید. 😉\";\n            referrerMessage = null; // برای دعوت‌کننده پیام ارسال نمی‌شود\n            adminMessage = \"\"; // برای ادمین هیچ گزارشی ارسال نمی‌شود\n        } else {\n            // منطق مربوط به کاربر جدید که با لینک دیگری وارد شده است\n            const totalReferralAmount = botreferalcreadit * 2; // جمع مبلغ رفرال برای هر دو طرف\n            referralMessage = `🎉 مبلغ ${formatNumberWithCommas(botreferalcreadit)} تومان به کیف پول شما اضافه شد! 💰`;\n            referrerMessage = `🎉 فردی با لینک شما وارد ربات شد و مبلغ ${formatNumberWithCommas(botreferalcreadit)} تومان به کیف پول شما اضافه شد! 💰`;\n            adminMessage = `📊 گزارش جدید | یک یوزر جدید با دعوت به ربات پیوست!\\n\\n- دعوت‌شونده: ${userData.first_name || \"نامشخص\"} ${userData.last_name || \"نامشخص\"} (@${userData.username || \"نامشخص\"})\\n- مبلغ رفرال: ${formatNumberWithCommas(totalReferralAmount)} تومان\\n- دعوت‌کننده: ${referrerId}\\n- دعوت‌شونده: ${userData[\"id\"]}`;\n        }\n\n        const result = {\n            json: {\n                user: {\n                    url: `https://api.telegram.org/bot${bottoken}/editMessageText`,\n                    method: \"POST\",\n                    parameters: {\n                        chat_id: userData[\"id\"],\n                        message_id: MessageData[\"message_id\"],\n                        text: referralMessage,\n                        parse_mode: \"HTML\",  // Added missing comma\n                        reply_markup: {\n                            inline_keyboard: [[{ text: \"دریافت منو\", callback_data: \"userpanel^\" }]]\n                        }\n                    }\n                }\n            }\n        };\n\n        if (referrerMessage) {\n            result.json.referrer = {\n                url: `https://api.telegram.org/bot${bottoken}/SendMessage`,\n                method: \"POST\",\n                parameters: {\n                    chat_id: referrerId,\n                    text: referrerMessage,\n                    parse_mode: \"HTML\"\n                }\n            };\n        }\n\n        result.json.admin = {\n            url: `https://api.telegram.org/bot${bottoken}/SendMessage`,\n            method: \"POST\",\n            parameters: {\n                chat_id: botadmin,\n                text: adminMessage,\n                parse_mode: \"HTML\"\n            }\n        };\n\n        log[\"result\"] = result;  // نمایش نتیجه نهایی\n\n        return [{\n            result: userExists === 1 ? \"user_exists\" : \"new_referral\",\n            original: inputData,\n            userMessage: result.json.user,\n            referrerMessage: referrerMessage ? result.json.referrer : null,\n            adminMessage: result.json.admin,\n            log: log\n        }];\n    } else {\n        log[\"referralIdError\"] = \"No referral ID found in the input\";\n    }\n} else {\n    log[\"error\"] = \"Input does not match joinedch^ pattern\";\n}\n\n// ارسال پیام خطا به کاربر در صورتی که ورودی غیرمعتبر باشد\nconst userErrorMessage = {\n    url: `https://api.telegram.org/bot${bottoken}/SendMessage`,\n    method: \"POST\",\n    parameters: {\n        chat_id: userData[\"id\"],\n        text: \"متوجه نشدم چی گفتی! لطفاً دوباره تلاش کنید. 🤔\",\n        parse_mode: \"HTML\"\n    }\n};\n\nlog[\"userErrorMessage\"] = userErrorMessage;  // اضافه کردن پیام خطا به لاگ\n\nreturn {\n    json: {\n        userError: userErrorMessage,\n        log: log // لاگ را در خروجی نمایش می‌دهیم\n    }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1040,
        -280
      ],
      "id": "9e1c63fe-149d-44b8-9ae5-b78b7cf66646",
      "name": "Make Menu Message6"
    },
    {
      "parameters": {
        "method": "={{ $json.userMessage.method }}",
        "url": "={{ $json.userMessage.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.userMessage.parameters }}",
        "options": {}
      },
      "id": "22411e0a-022d-4dfb-a0ed-f9310a77b567",
      "name": "Send To User1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1200,
        -280
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "method": "={{ $('Make Menu Message6').item.json.referrerMessage.method }}",
        "url": "={{ $('Make Menu Message6').item.json.referrerMessage.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $('Make Menu Message6').item.json.referrerMessage.parameters }}",
        "options": {}
      },
      "id": "bb621eaa-0661-4d5e-a1fb-35b6fc724c3a",
      "name": "Send To Referrer1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1380,
        -280
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "method": "={{ $('Make Menu Message6').item.json.adminMessage.method }}",
        "url": "={{ $('Make Menu Message6').item.json.adminMessage.url }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $('Make Menu Message6').item.json.adminMessage.parameters }}",
        "options": {}
      },
      "id": "2898d369-07e4-4547-819b-51b0e76f6b13",
      "name": "Send To Admin1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1560,
        -280
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT CASE \n    WHEN EXISTS (SELECT 1 FROM users WHERE user_id = {{ $('If').item.json.result.user.id }}) THEN true\n    ELSE false\nEND AS user_exists;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        860,
        -280
      ],
      "id": "6be13fd7-ebb2-4a96-addc-03e3337a07fa",
      "name": "Check User Existence1",
      "credentials": {
        "mySql": {
          "id": "vSbnTOv3VnJULlhr",
          "name": "Internet-coffe-Mahdi"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- اضافه کردن مبلغ به موجودی کاربر دعوت‌شونده\nINSERT INTO users (user_id, phone_number, balance, username, created_at)\nVALUES ({{ $('Send To User1').item.json.result.chat.id }}, '', {{ $('BOT INFO').item.json[\"referal-creadit\"] }}, '{{ $('Send To User1').item.json.result.chat.username || '' }}', {{ $('SIMORGH').item.json.callback_query.message.date }})\nON DUPLICATE KEY UPDATE \n    balance = balance + {{ $('BOT INFO').item.json[\"referal-creadit\"] }};  \n\n-- اضافه کردن مبلغ به موجودی دعوت‌کننده\nINSERT INTO users (user_id, phone_number, balance, username, created_at)\nVALUES ({{ $('Send To Referrer1').item.json.result.chat.id }}, '', {{ $('BOT INFO').item.json[\"referal-creadit\"] }}, '{{ $('Send To Referrer1').item.json.result.chat.username || '' }}', {{ $('SIMORGH').item.json.callback_query.message.date }})\nON DUPLICATE KEY UPDATE \n    balance = balance + {{ $('BOT INFO').item.json[\"referal-creadit\"] }};  \n\n-- ثبت اطلاعات در جدول referrals\nINSERT INTO referrals (inviter_user_id, invitee_user_id, inviter_cart_amount, invitee_cart_amount, referral_date)\nVALUES \n(\n    {{ $('Send To Referrer1').item.json.result.chat.id }},  -- دعوت‌کننده\n    {{ $('Send To User1').item.json.result.chat.id }},     -- دعوت‌شونده\n    {{ $('BOT INFO').item.json[\"referal-creadit\"] }},      -- مبلغ سبد خرید دعوت‌کننده\n    {{ $('BOT INFO').item.json[\"referal-creadit\"] }},      -- مبلغ سبد خرید دعوت‌شونده\n    CURRENT_TIMESTAMP                                      -- تاریخ و زمان ارجاع\n)",
        "options": {}
      },
      "id": "e800f89a-0e54-4681-a901-d33690452c25",
      "name": "Set User AND UPDATE balance1",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        1760,
        -280
      ],
      "credentials": {
        "mySql": {
          "id": "vSbnTOv3VnJULlhr",
          "name": "Internet-coffe-Mahdi"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "*"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -780,
        20
      ],
      "id": "5238d1fa-d421-4110-be7d-9574ccac894b",
      "name": "Coffe-Mahdi",
      "webhookId": "fa3146f5-5f65-4bc1-b940-2373119f8047",
      "credentials": {
        "telegramApi": {
          "id": "yluO7J4XFRkO6HN9",
          "name": "COFFE-NET-BOT"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "orderDraft",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -800,
        1140
      ],
      "id": "cb0fa710-ddae-4093-b111-d98f827843e8",
      "name": "Webhook",
      "webhookId": "76944611-ceb9-4619-ac31-a3cf0c83b0b2"
    },
    {
      "parameters": {
        "operation": "sendDocument",
        "chatId": "=-1002478908922",
        "binaryData": true,
        "binaryPropertyName": "file",
        "additionalFields": {
          "caption": "={{ JSON.parse($('Webhook').item.json.body.orderDraft)['text-to-admin'] }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -580,
        1140
      ],
      "id": "26df54f5-96c8-4b20-9f18-706abcb90d6a",
      "name": "MessageTO-order.ch",
      "webhookId": "7568fc79-f650-4670-b434-4bb34f070523",
      "credentials": {
        "telegramApi": {
          "id": "yluO7J4XFRkO6HN9",
          "name": "COFFE-NET-BOT"
        }
      }
    }
  ],
  "pinData": {
    "Coffe-Mahdi": [
      {
        "json": {
          "update_id": 580300663,
          "callback_query": {
            "id": "8518805086554587589",
            "from": {
              "id": 1983438871,
              "is_bot": false,
              "first_name": "Focus ACC",
              "username": "Mena_llBOT",
              "language_code": "en"
            },
            "message": {
              "message_id": 1169,
              "from": {
                "id": 7794284252,
                "is_bot": true,
                "first_name": "Cafenet Mahdi",
                "username": "Cafenetmahdi_bot"
              },
              "chat": {
                "id": 1983438871,
                "first_name": "Focus ACC",
                "username": "Mena_llBOT",
                "type": "private"
              },
              "date": 1741752849,
              "text": "کاربر گرامی\nلطفا یکی از گزینه‌های زیر رو برای کافی نت مهدی انتخاب کنید :",
              "reply_markup": {
                "inline_keyboard": [
                  [
                    {
                      "text": "لیست خدمات کافی نت مهدی",
                      "callback_data": "serviceslist^"
                    }
                  ],
                  [
                    {
                      "text": "💎 اعتبار شما",
                      "callback_data": "userprofile^"
                    },
                    {
                      "text": "🛍 باشگاه مشتریان ",
                      "callback_data": "club^"
                    }
                  ],
                  [
                    {
                      "text": "❣️ دعوت از دوستان",
                      "callback_data": "Invitefriends^"
                    }
                  ],
                  [
                    {
                      "text": "» راهنما",
                      "callback_data": "help^"
                    },
                    {
                      "text": "» پشتیبانی",
                      "url": "https://t.me/mohamminch"
                    }
                  ]
                ]
              }
            },
            "chat_instance": "8745375940650992355",
            "data": "serviceslist^"
          }
        }
      }
    ],
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "besparbot.pelicanstudio.ir",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36",
            "content-length": "380643",
            "accept": "*/*",
            "accept-encoding": "gzip, deflate, br, zstd",
            "accept-language": "en-US,en;q=0.9,fa;q=0.8,fr;q=0.7,de;q=0.6",
            "content-type": "multipart/form-data; boundary=----WebKitFormBoundaryKgguxL4Ck8v5YzgB",
            "origin": "https://pelicanstudio.ir",
            "priority": "u=1, i",
            "referer": "https://pelicanstudio.ir/",
            "sec-ch-ua": "\"Chromium\";v=\"134\", \"Not:A-Brand\";v=\"24\", \"Google Chrome\";v=\"134\"",
            "sec-ch-ua-mobile": "?0",
            "sec-ch-ua-platform": "\"Windows\"",
            "sec-fetch-dest": "empty",
            "sec-fetch-mode": "cors",
            "sec-fetch-site": "same-site",
            "x-forwarded-for": "172.30.23.1",
            "x-forwarded-host": "besparbot.pelicanstudio.ir",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "traefik-cddf9778-wlbwk",
            "x-real-ip": "172.30.23.1"
          },
          "params": {},
          "query": {},
          "body": {
            "orderDraft": "{\"orderCode\":\"M86QNZRST2JSP2SM\",\"name\":\"امیرمهدی چراغیان\",\"phone\":\"09199704108\",\"files\":[{\"name\":\"photo_2024-03-28_04-40-42.jpg\",\"settings\":{\"color\":\"blackWhite\",\"printType\":\"singleSided\",\"paperSize\":\"A4\",\"paperType\":\"normal\",\"copies\":1,\"pageCount\":1,\"pageRange\":\"\",\"staple\":false,\"notes\":\"\"},\"price\":4500},{\"name\":\"MaintenancePlan.pdf\",\"settings\":{\"color\":\"blackWhite\",\"printType\":\"singleSided\",\"paperSize\":\"A4\",\"paperType\":\"normal\",\"copies\":1,\"pageCount\":3,\"pageRange\":\"1-3\",\"staple\":false,\"notes\":\"\",\"totalPages\":3},\"price\":13500}],\"deliveryMethod\":\"pickup\",\"totalPrice\":18000,\"discountPercent\":0,\"user_id\":\"7534724248\",\"zipFileName\":\"7534724248_20250313.zip\",\"zipDownloadUrl\":\"https://besparbot.pelicanstudio.ir/uploads/7534724248_20250313.zip\",\"text-to-admin\":\"🔔 سفارش جدید دریافت شد!\\n\\n📦 کد سفارش: M86QNZRST2JSP2SM\\n👤 نام: امیرمهدی چراغیان\\n📱 تلفن: 09199704108\\n🆔 شناسه کاربر: 7534724248\\n\\n📄 فایل‌ها:\\n• photo_2024-03-28_04-40-42.jpg (1 صفحه)\\n               سیاه و سفید | یک‌رو | A4\\n               کاغذ معمولی\\n               \\n• MaintenancePlan.pdf (3 صفحه)\\n               سیاه و سفید | یک‌رو | A4\\n               کاغذ معمولی\\n               \\n\\n🚚 روش تحویل: تحویل حضوری\\n\\n💰 مبلغ کل: ۱۸٬۰۰۰ تومان\\n\\n⏳ وضعیت: در انتظار پرداخت\\n⚡️ Powered by PelicanStudio.ir\",\"text-to-user\":\"امیرمهدی چراغیان عزیز،\\nسفارش شما با موفقیت دریافت شد! 🎉\\n\\n📦 کد سفارش: M86QNZRST2JSP2SM\\n\\n📄 مشخصات فایل‌های ارسالی:\\n• photo_2024-03-28_04-40-42.jpg\\n    - تعداد صفحات: 1 صفحه\\n    - تعداد نسخه: 1\\n    - نوع چاپ: سیاه و سفید\\n    - روش چاپ: یک‌رو\\n    - اندازه کاغذ: A4\\n    - نوع کاغذ: معمولی\\n    \\n    \\n\\n• MaintenancePlan.pdf\\n    - تعداد صفحات: 3 صفحه\\n    - تعداد نسخه: 1\\n    - نوع چاپ: سیاه و سفید\\n    - روش چاپ: یک‌رو\\n    - اندازه کاغذ: A4\\n    - نوع کاغذ: معمولی\\n    \\n    \\n\\n🚚 روش تحویل: تحویل حضوری\\n\\n💰 مبلغ قابل پرداخت: ۱۸٬۰۰۰ تومان\\n\\n\\n⚠️ توجه: سفارش شما در انتظار پرداخت است.\\nلطفاً برای تکمیل سفارش، مبلغ را از طریق لینک پرداخت پرداخت نمایید.\\n\\nبا تشکر از انتخاب ما 🙏\\nکافی‌نت مهدی\"}"
          },
          "webhookUrl": "https://besparbot.pelicanstudio.ir/webhook/orderDraft",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Switch": {
      "main": [
        [
          {
            "node": "Make Menu Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Make query",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check User Existence1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Make Menu Message": {
      "main": [
        [
          {
            "node": "SEND result Click Menu Layer 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BOT INFO": {
      "main": [
        [
          {
            "node": "Check Channel User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Switcher data": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Switcher text": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Make Menu Message3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check User Existence",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Make Menu Message4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check user_exists": {
      "main": [
        [
          {
            "node": "T OR F",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set User": {
      "main": [
        [
          {
            "node": "New User Notify Admin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "T OR F": {
      "main": [
        [
          {
            "node": "Set User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Make query": {
      "main": [
        [
          {
            "node": "Request-to-db",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Request-to-db": {
      "main": [
        [
          {
            "node": "Make Menu Message2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Make Menu Message2": {
      "main": [
        [
          {
            "node": "SEND result Click Menu Layer 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Channel User": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Check Creator",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check_Message_type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Creator": {
      "main": [
        [
          {
            "node": "LINK JOIN",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check_Message_type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check_Message_type": {
      "main": [
        [
          {
            "node": "Merge Switcher data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Switcher text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check user_exists1": {
      "main": [
        [
          {
            "node": "T OR F1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "T OR F1": {
      "main": [
        [
          {
            "node": "Set User1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set User1": {
      "main": [
        [
          {
            "node": "New User Notify Admin1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SEND result Click Menu Layer 1": {
      "main": [
        [
          {
            "node": "Check user_exists1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Make Menu Message3": {
      "main": [
        [
          {
            "node": "SEND result Click Menu TO USER",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SEND result Click Menu TO USER": {
      "main": [
        [
          {
            "node": "SEND result Click Menu TO ADMIN",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SEND result Click Menu TO ADMIN": {
      "main": [
        [
          {
            "node": "Check user_exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SEND result Click Menu TO USER1": {
      "main": [
        [
          {
            "node": "SEND result Click Menu TO ADMIN1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Make Menu Message4": {
      "main": [
        [
          {
            "node": "SEND result Click Menu TO USER1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Make Menu Message5": {
      "main": [
        [
          {
            "node": "Send To User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send To User": {
      "main": [
        [
          {
            "node": "Send To Referrer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send To Referrer": {
      "main": [
        [
          {
            "node": "Send To Admin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check User Existence": {
      "main": [
        [
          {
            "node": "Make Menu Message5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send To Admin": {
      "main": [
        [
          {
            "node": "Set User AND UPDATE balance",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Make Menu Message6": {
      "main": [
        [
          {
            "node": "Send To User1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send To User1": {
      "main": [
        [
          {
            "node": "Send To Referrer1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send To Referrer1": {
      "main": [
        [
          {
            "node": "Send To Admin1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send To Admin1": {
      "main": [
        [
          {
            "node": "Set User AND UPDATE balance1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check User Existence1": {
      "main": [
        [
          {
            "node": "Make Menu Message6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coffe-Mahdi": {
      "main": [
        [
          {
            "node": "BOT INFO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "MessageTO-order.ch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "82077602-a2db-4577-bd58-da3281be50b9",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ae97ba35770b76a9a65a530931f4cf26a9e56cda380a49b095c8aa5a31c5bd2a"
  },
  "id": "s64GKt0xMc0e01Z7",
  "tags": []
}